---
title: "5 OSMdata"
date: "`r Sys.Date()`"
categories: ["R"]
tags: ["R Markdown", "ACS", "Census data"]
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE,message=F,warning = F,cache = T)
if (!require(pacman)) {install.packages("pacman"); library(pacman)}
p_load(tidyverse,mapview, osmdata )
# mapview, crsuggest,
# remotes::install_github('ropensci/osmdata')
```



<!-- #  {.tabset .tabset-fade .tabset-pills} -->

```{r,echo=F}
# tri_cou <- c(Multnomah = "41051", Washington = "41067", Clackamas = "41005") #, Yamhill = "41071" , Clark = "53011"
tri_cou <- c('051','067','005')# "Multnomah", "Washington", "Clackamas"
# pdx_bg <- block_groups(state = "41",county = tri_cou, cb = FALSE, year = 2019)
# pdx_bg <- pdx_bg %>% filter(str_sub(GEOID10, 1, 5)  %in% tri_cou)
pdx_bg <- readRDS("pdx_bg.RDS")
```

https://wiki.openstreetmap.org/wiki/Category:Keys

```{r,eval=F,echo=F}
available_features ()
```

```{r}
# getbb("Portland", format_out = "data.frame", limit = 20)
identical(opq(bbox = getbb("Portland", display_name_contains ="Portland, Multnomah County, Oregon, United States")), 
          opq(bbox = 'portland or us'))

pdx_df <- getbb(place_name = "portland or", format_out = "data.frame")
pdx_poly <- getbb(place_name = "portland or", format_out = "polygon")
# getbb(place_name = "Multnomah", format_out = "data.frame") # "Washington", "Clackamas"
```


### The overpass API

https://wiki.openstreetmap.org/wiki/Overpass_API#Public_Overpass_API_instances

```{r}
get_overpass_url()
set_overpass_url("https://overpass.kumi.systems/api/interpreter")
```






```{r,echo=F}
pdx_osm <- opq(bbox = pdx_poly) %>%
    add_osm_feature(key = 'highway', value = 'motorway') %>%
    osmdata_sf () %>%
    trim_osmdata (pdx_poly)

```


```{r,echo=F}
pdx_osm <- opq(bbox = 'portland or') %>%
    add_osm_feature(key = 'motorway')
opq_string(pdx_osm)
osmdata_sf(opq_string(pdx_osm))
```

### The osmdata_xml() function

```{r,echo=F}
pdx_osm <- opq('portland or') %>%
  add_osm_feature(key = 'highway', value = 'motorway') %>% 
  osmdata_xml(file = 'pdx.osm')
pdx_osm.sp <- osmdata_sp(pdx_osm)
pdx_osm.sf <- osmdata_sf(pdx_osm)
sp::plot(pdx_osm.sp$osm_lines)
```


```{r,echo=F}
q <- opq('portland or') %>%
    add_osm_feature(key = 'highway', value = 'motorway')
doc <- osmdata_xml(q, 'pdx.osm')
dat1 <- osmdata_sf(q, doc)
dat2 <- osmdata_sf(q, 'pdx.osm')
identical(dat1, dat2)
readLines('pdx.osm')[1:6]
```

### The osmdata_sf() function

```{r}
sf::st_read('pdx.osm', layer = 'points')
osmdata_sf(q, 'pdx.osm')
```

### The osmdata_sp() function

```{r}
dat <- sf::st_read('pdx.osm', layer = 'lines', quiet = TRUE)
dat_sp <- as(dat, 'Spatial')
class(dat_sp)
dim(dat_sp)
```


```{r}
pdx_sp <- opq ('portland or') %>%
    add_osm_feature (key = 'highway', value = 'motorway',
                 value_exact = FALSE) %>%
    osmdata_sp()
sp::plot(pdx_sp$osm_lines)
```


```{r, eval=T}
dat_break <- dat %>% filter(`osm_id`!=5509189)
mapview(dat) + mapview(dat_break)
```

# Base Social Vulnerability Indicators(percentages)

## Child care Needs

### 1 Single parent households with children/Total Households


