## Calculate OD matrix
odd.matrix <- dodgr_dists (net3c.main, from = od.all, to = od.all, heap = "TriHeapExt")
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
row.names(odd.matrix) <- pdx_df$GEOID
colnames(odd.matrix) <- pdx_df$GEOID
## Convert to long table
od.table <-odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
summary(od.table$dist)
plot(density(od.table$dist))
## Calculate OD matrix
odd.matrix <- dodgr_dists (net3c.main, from = od.all, to = od.all, heap = "Heap23")
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
row.names(odd.matrix) <- pdx_df$GEOID
colnames(odd.matrix) <- pdx_df$GEOID
## Convert to long table
od.table <-odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
summary(od.table$dist)
plot(density(od.table$dist))
## Calculate OD matrix
odd.matrix <- dodgr_dists (net3c.main, from = od.all, to = od.all) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
row.names(odd.matrix) <- pdx_df$GEOID
colnames(odd.matrix) <- pdx_df$GEOID
## Convert to long table
od.table <-odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
summary(od.table$dist)
## Join Block Group with long OD table
pdx_bg %>% left_join(od.table %>% filter(orig=="410510073001"),by = c("GEOID"="dest")) %>%
mapview(z="dist") #+ mapview(pdx3cnet.main)
pdx_bg %>% left_join(od.table %>% filter(orig=="410510103052"),by = c("GEOID"="dest")) %>%
mapview(z="dist")
## Full three-county road network
pdx3cnet <- readRDS("~/urbanstudy/NITC-Resilience/content/osm/pdx3cnet.Rds")
##################################################################
# Import Census Block Groups.
pdx_bg <- readRDS(file = "~/urbanstudy/NITC-Resilience/content/acs/pdx_bg.RDS")
## Select GROID and centroid points
options(digits = 12)
pdx_df <- pdx_bg %>% as.data.frame() %>% select(GEOID,INTPTLAT,INTPTLON,-geometry) %>% # as_tibble()
mutate(lat=as.numeric(INTPTLAT),lon=as.numeric(INTPTLON)) %>%
select(GEOID,lat,lon)
## All centroid points as OD
od.all <- pdx_df  %>% select(-GEOID)
##################################################################
################## Using dodgr_dists function ###############
##################################################################
# Calculate all network distance
## Read the network data
net3cc.main <- readRDS("~/urbanstudy/NITC-Resilience/content/osm/net3ccmain.Rds")
## Calculate OD matrix
odd.matrix <- dodgr_dists (net3c.main, from = od.all, to = od.all) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
row.names(odd.matrix) <- pdx_df$GEOID
p_load(tidyverse,sf,mapview, osmdata, dodgr, bench,igraph) # crsuggest,
if (!require(pacman)) {install.packages("pacman"); library(pacman)}
p_load(tidyverse,sf,mapview, osmdata, dodgr, bench,igraph) # crsuggest,
## Calculate OD matrix
odd.matrix <- dodgr_dists (net3c.main, from = od.all, to = od.all) #, heap = "Heap23"
## Calculate OD matrix
odd.matrix <- dodgr_dists (net3cc.main, from = od.all, to = od.all) #, heap = "Heap23"
## All centroid points as OD
od.all <- pdx_df  %>% select(-GEOID)
##################################################################
# Import Census Block Groups.
pdx_bg <- readRDS(file = "~/urbanstudy/NITC-Resilience/content/acs/pdx_bg.RDS")
## Select GROID and centroid points
options(digits = 12)
pdx_df <- pdx_bg %>% as.data.frame() %>% select(GEOID,INTPTLAT,INTPTLON,-geometry) %>% # as_tibble()
mutate(lat=as.numeric(INTPTLAT),lon=as.numeric(INTPTLON)) %>%
select(GEOID,lat,lon)
## All centroid points as OD
od.all <- pdx_df  %>% select(-GEOID)
## Calculate OD matrix
odd.matrix <- dodgr_dists (net3cc.main, from = od.all, to = od.all) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
row.names(odd.matrix) <- pdx_df$GEOID
colnames(odd.matrix) <- pdx_df$GEOID
## Convert to long table
od.table <-odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
summary(od.table$dist)
plot(density(od.table$dist))
## Join Block Group with long OD table
pdx_bg %>% left_join(od.table %>% filter(orig=="410510073001"),by = c("GEOID"="dest")) %>%
mapview(z="dist") #+ mapview(pdx3cnet.main)
pdx_bg %>% left_join(od.table %>% filter(orig=="410670326081"),by = c("GEOID"="dest")) %>%
mapview(z="dist")
pdx_bg %>% left_join(od.table %>% filter(orig=="410050243042"),by = c("GEOID"="dest")) %>%
mapview(z="dist")
pdx_bg %>% left_join(od.table %>% filter(orig=="410510103052"),by = c("GEOID"="dest")) %>%
mapview(z="dist")
## Join Block Group with long OD table
pdx_bg %>% left_join(od.table %>% filter(orig=="410510073001"),by = c("GEOID"="dest")) %>%
mapview(z="dist") #+ mapview(pdx3cnet.main)
pdx_bg %>% left_join(od.table %>% filter(orig=="410670326081"),by = c("GEOID"="dest")) %>%
mapview(z="dist") # Hillsboro airport
pdx_bg %>% left_join(od.table %>% filter(orig=="410510103052"),by = c("GEOID"="dest")) %>%
mapview(z="dist") # Palisades
pdx_bg %>% left_join(od.table %>% filter(orig=="410050243042"),by = c("GEOID"="dest")) %>%
mapview(z="dist") # The longest distance
if (!require(pacman)) {install.packages("pacman"); library(pacman)}
p_load(tidyverse,sf,mapview, osmdata, dodgr, bench,igraph) # crsuggest,
##################################################################
# Import Census Block Groups.
pdx_bg <- readRDS(file = "~/urbanstudy/NITC-Resilience/content/acs/pdx_bg.RDS")
## Select GROID and centroid points
options(digits = 12)
pdx_df <- pdx_bg %>% as.data.frame() %>% select(GEOID,INTPTLAT,INTPTLON,-geometry) %>% # as_tibble()
mutate(lat=as.numeric(INTPTLAT),lon=as.numeric(INTPTLON)) %>%
select(GEOID,lat,lon)
## All centroid points as OD
od.all <- pdx_df  %>% select(-GEOID)
##################################################################
################## Using dodgr_dists function ###############
##################################################################
# Calculate all network distance
## Read the network data
net3cc.main <- readRDS("~/urbanstudy/NITC-Resilience/content/osm/net3ccmain.Rds")
## Calculate OD matrix
odd.matrix <- dodgr_dists (net3cc.main, from = od.all, to = od.all) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
row.names(odd.matrix) <- pdx_df$GEOID
colnames(odd.matrix) <- pdx_df$GEOID
## Convert to long table
od.table <-odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
## Join Block Group with long OD table
pdx_bg %>% left_join(od.table %>% filter(orig=="410510073001"),by = c("GEOID"="dest")) %>%
mapview(z="dist") #+ mapview(pdx3cnet.main) # PDX airport, 34.7km to Hillsboro airport (41.8km in GoogleMap)
## Join Block Group with long OD table
pdx_bg %>% left_join(od.table %>% filter(orig=="410510073001"),by = c("GEOID"="dest")) %>%
mapview(z="dist") #+ mapview(pdx3cnet.main) # PDX airport, 34.7km to Hillsboro airport (41.8km in GoogleMap)
pdx_bg %>% left_join(od.table %>% filter(orig=="410050243042"),by = c("GEOID"="dest")) %>%
mapview(z="dist") # The longest distance # Mt. Hood, Government Camp to Glenwood 211.4km (146km in GoogleMap)
pdx_bg %>% left_join(od.table %>% filter(orig=="410510103052"),by = c("GEOID"="dest")) %>%
mapview(z="dist") # Palisades, 55.5km to Hillsboro downtown (62km in GoogleMap)
## Read the road network with geometry infor
pdx3cnet.main <- readRDS("~/urbanstudy/NITC-Resilience/content/osm/pdx3cnet.main.Rds")
mapview(pdx3cnet.main)
##################################################################
# Calculate -1 network distance
leg <- c("5528057","595610338")  # osm_id: 5528057, 595610338 # Marquam Bridge
network <- net3cc.main
od <- od.all
od <- OD %>% select(-GEOID)
net.break <- network %>% filter(-leg)
net.break <- network[!(osm.id %in%leg),]
mapview(net3cc.main)
mapview(net3cc.main)
mapview(pdx3cnet.main)
## Select the major roads
pdx3cnet.main<- pdx3cnet[which(pdx3cnet$highway%in%
c("motorway", "motorway_link", "primary", "primary_link", "secondary", "secondary_link", "tertiary", "tertiary_link")),] # ,"unclassified", "residential"
## Full three-county road network
pdx3cnet <- readRDS("~/urbanstudy/NITC-Resilience/content/osm/pdx3cnet.Rds")
## Select the major roads
pdx3cnet.main<- pdx3cnet[which(pdx3cnet$highway%in%
c("motorway", "motorway_link", "primary", "primary_link", "secondary", "secondary_link", "tertiary", "tertiary_link")),] # ,"unclassified", "residential"
## Select Three columns
pdx3cnet.main <- pdx3cnet.main %>% select(osm_id, highway, geometry)
## Weighted network by "motorcar" include from, to, distance, and time.
net3c.main <- weight_streetnet (pdx3cnet.main, wt_profile ="motorcar") #
## Graph Contraction: Simplify the network
net3c.main <- net3c.main[net3c.main$component == 1, ]
mapview(net3c.main)
ï¼Ÿweight_streetnet
?weight_streetnet
## Weighted network by "motorcar" include from, to, distance, and time.
net3c.main <- weight_streetnet (pdx3cnet.main, wt_profile ="motorcar",id_col = "osm_id") #
net.break <- network[!(way_id %in%leg),]
net.break <- network[!(network$way_id %in%leg),]
odd.matrix <- dodgr_dists (net.break, from = od, to = od) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
colnames(odd.matrix) <- row.names(odd.matrix) <- OD$GEOID
OD <- pdx_df
od <- OD %>% select(-GEOID)
net.break <- network[!(network$way_id %in%leg),]
odd.matrix <- dodgr_dists (net.break, from = od, to = od) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
colnames(odd.matrix) <- row.names(odd.matrix) <- OD$GEOID
## Convert to long table
od.table <- odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
sum(od.table$dist)
mean(od.table$dist)
breakaleg <- function(network, OD, leg){
od <- OD %>% select(-GEOID)
net.break <- network[!(network$way_id %in%leg),]
odd.matrix <- dodgr_dists (net.break, from = od, to = od) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
colnames(odd.matrix) <- row.names(odd.matrix) <- OD$GEOID
## Convert to long table
od.table <- odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
return(mean(od.table$dist))
}
breakaleg(network,OD,leg)
##################################################################
# Calculate -1 network distance
leg <- NULL# c("5528057","595610338")  # osm_id: 5528057, 595610338 # Marquam Bridge
breakaleg(network,OD,leg)
212.30*12
579.33/12
579.33/6
if (!require(pacman)) {install.packages("pacman"); library(pacman)}
p_load(tidyverse,mapview, dodgr)
##################################################################
# Import simplified full network.
net3cc.main <- readRDS("~/urbanstudy/NITC-Resilience/content/osm/net3ccmain.Rds")
# summary(net3cc.main$d)
# plot(density(net3cc.main$d))
# Import Census Block Groups.
pdx_bg <- readRDS(file = "~/urbanstudy/NITC-Resilience/content/acs/pdx_bg.RDS")
## Select GROID and centroid points
pdx_df <- pdx_bg %>% as.data.frame() %>% select(GEOID,INTPTLAT,INTPTLON,-geometry) %>% # as_tibble()
mutate(lat=as.numeric(INTPTLAT),lon=as.numeric(INTPTLON)) %>%
select(GEOID,lat,lon)
## All centroid points as OD
od.all <- pdx_df  %>% select(-GEOID)
##################################################################
# Calculate full network distance
## Calculate OD matrix
odd.matrix <- dodgr_dists (net3cc.main, from = od.all, to = od.all) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
colnames(odd.matrix) <- row.names(odd.matrix) <- pdx_df$GEOID
mean(odd.matrix[upper.tri(odd.matrix)])
## Convert to long table
od.table <-odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
head(od.table)
summary(od.table$dist)
## Read the road network with geometry infor
pdx3cnet.main <- readRDS("~/urbanstudy/NITC-Resilience/content/osm/pdx3cnet.main.Rds")
mapview(pdx3cnet.main)
## Read the road network with geometry infor
pdx3cnet.main <- readRDS("~/urbanstudy/NITC-Resilience/content/osm/pdx3cnet.main.Rds")
## Join Block Group with long OD table
pdx_bg %>% left_join(od.table %>% filter(orig=="410510073001"),by = c("GEOID"="dest")) %>%
mapview(z="dist") #+ mapview(pdx3cnet.main) # PDX airport, 34.7km to Hillsboro airport (41.8km in GoogleMap)
##################################################################
# Calculate -1 network distance
leg <-c("5528057","595610338") #  NULL # osm_id: 5528057, 595610338 # Marquam Bridge
ohsu <- c("410510058002")
network <- net3cc.main
OD <- pdx_df
breakaleg <- function(network, OD, leg){
od <- OD %>% select(-GEOID)
net.break <- network[!(network$way_id %in%leg),]
odd.matrix <- dodgr_dists (net.break, from = ohsu, to = od) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
colnames(odd.matrix) <- row.names(odd.matrix) <- OD$GEOID
## Convert to long table
od.table <- odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
return(mean(od.table$dist))
}
breakaleg(network,OD,leg)
od
OD
str(OD)
ohsu <- c("410510058002")
breakaleg(network,OD,leg)
ohsu
od <- OD %>% select(-GEOID)
pdx_df[GEOID=="410510058002",]
pdx_df[pdx_df$GEOID=="410510058002",]
ohsu <- pdx_df[pdx_df$GEOID=="410510058002",]
breakaleg(network,OD,leg)
dodgr_dists (net.break, from = ohsu, to = od)
net.break <- network[!(network$way_id %in%leg),]
dodgr_dists (net.break, from = ohsu, to = od)
ohsu
pdx_df[pdx_df$GEOID=="410510058002",c(2,3)]
ohsu <- pdx_df[pdx_df$GEOID=="410510058002",c(2,3)]
dodgr_dists (net.break, from = ohsu, to = od)
breakaleg(network,OD,leg)
odd.matrix <- dodgr_dists (net.break, from = ohsu, to = od) #, heap = "Heap23"
odd.matrix
View(odd.matrix)
##################################################################
# Calculate -1 network distance
leg <-c("5528057","595610338") #  NULL # osm_id: 5528057, 595610338 # Marquam Bridge
network <- net3cc.main
O <- D <- pdx_df
breakaleg <- function(network, O, D, leg){
o <- O %>% select(-GEOID)
d <- D %>% select(-GEOID)
net.break <- network[!(network$way_id %in%leg),]
odd.matrix <- dodgr_dists (net.break, from = o, to = d) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
colnames(odd.matrix) <- D$GEOID
row.names(odd.matrix) <- O$GEOID
## Convert to long table
od.table <- odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
return(mean(od.table$dist))
}
breakaleg(network,O[O$GEOID=="410510058002",], D,leg)
breakaleg(network,O[O$GEOID=="410510058002",], D,leg=NULL)
breakaleg(network,O[O$GEOID=="410510058002",], D,leg)
breakaleg(network,O[O$GEOID=="410510058002",], D,leg=NULL)
O[O$GEOID=="410510058002",]
D
leg
breakaleg(network,O[O$GEOID=="410510058002",], D,NULL)
breakaleg(network,O[O$GEOID=="410510058002",], D,leg)
leg <-NULL
breakaleg(network,O[O$GEOID=="410510058002",], D,NULL)
mapview(pdx3cnet.main)
breakaleg(network,O, D,NULL)
breakaleg(network,O, D,c("5528057","595610338"))
oshutoall <- breakaleg(network,O[O$GEOID=="410510058002",], D,NULL)
oshutoall_marguambridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,c("5528057","595610338"))
oshutoall_rossislandbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,c("587574521"))
alltoall <- breakaleg(network,O, D,NULL)
alltoall_marguambridge <- breakaleg(network,O, D,c("5528057","595610338"))
oshutoall_sellwoodbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,leg=c("5956103391"))
alltoall_rossislandbridge <- breakaleg(network,O, D,c("587574521"))
alltoall_sellwoodbridge <- breakaleg(network,O, D,c("5956103391"))
oshutoall_rossislandbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,c("123374695"))
oshutoall_sellwoodbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,leg=c("595610339"))
alltoall_rossislandbridge <- breakaleg(network,O, D,c("123374695"))
alltoall_sellwoodbridge <- breakaleg(network,O, D,c("595610339"))
alltoall_rossislandbridge <- breakaleg(network,O, D,c("123374695"))
alltoall_sellwoodbridge <- breakaleg(network,O, D,c("595610339"))
oshutoall <- breakaleg(network,O[O$GEOID=="410510058002",], D,NULL)
oshutoall_marguambridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,c("5528057","595610338"))
oshutoall_rossislandbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,c("587574521","123374695"))
oshutoall_sellwoodbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,leg=c("923041198","595610339"))
alltoall <- breakaleg(network,O, D,NULL)
alltoall_marguambridge <- breakaleg(network,O, D,c("5528057","595610338"))
alltoall_rossislandbridge <- breakaleg(network,O, D,c("587574521","123374695"))
alltoall_sellwoodbridge <- breakaleg(network,O, D,c("923041198","595610339"))
alltoall_rossislandbridge <- breakaleg(network,O, D,c("587574521","123374695","174985371"))
oshutoall_rossislandbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,c("587574521","123374695","174985371"))
network[!(network$way_id %in%c("587574521","123374695","174985371")),]
network[!(network$way_id %in%c("587574521","123374695","174985371")),] %>% str()
network[!(network$way_id %in%c("587574521","123374695","174985371")),] %>% str()
network[!(network$way_id %in%c("587574521","123374695","174985371")),] %>% nrow()
# osm_id: 5528057, 595610338 # Marquam Bridge
# osm_id: 123374695, 587574521, 174985371 Rose Island Bridge
# osm_id: 923041198, 595610339 Sellwood Bridge
network <- net3cc.main
network[!(network$way_id %in%c("587574521","123374695","174985371")),] %>% nrow()
network[!(network$way_id %in%c("5528057","595610338")),] %>% nrow()
network[!(network$way_id %in%c("923041198","595610339")),] %>% nrow()
network[network$way_id %in%c("923041198","595610339"),] %>% nrow()
net3cc.main[net3cc.main$way_id %in%c("923041198","595610339"),] %>% nrow()
pdx3cnet.mai[pdx3cnet.mai$osm_id %in%c("923041198","595610339"),] %>% nrow()
pdx3cnet.main[pdx3cnet.main$osm_id %in%c("923041198","595610339"),] %>% nrow()
network[network$way_id %in%c("923041198","595610339","486837832"),] %>% nrow()
network[network$way_id %in%c("465285319","923041198","595610339","486837832"),] %>% nrow()
network[network$way_id %in%c("682179096","587574521","123374695","174985371"),] %>% nrow()
network[network$way_id %in%c("465285319","923041198","595610339","486837832"),] %>% nrow()
network[network$way_id %in%c("542826787","682179096","587574521","123374695","174985371"),] %>% nrow()
network[network$way_id %in%c("189307193","542826787","682179096","587574521","123374695","174985371"),] %>% nrow()
oshutoall <- breakaleg(network,O[O$GEOID=="410510058002",], D,NULL)
oshutoall_marguambridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,c("5528057","595610338"))
oshutoall_rossislandbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,c("189307193","542826787","682179096","587574521","123374695","174985371"))
oshutoall_sellwoodbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,leg=c("465285319","923041198","595610339","486837832"))
network[network$way_id %in%c("189307193","542826787","682179096","587574521","123374695","174985371"),] %>% nrow()
network[network$way_id %in%c("465285319","923041198","595610339","486837832"),] %>% nrow()
alltoall_rossislandbridge <- breakaleg(network,O, D,c("189307193","542826787","682179096","587574521","123374695","174985371"))
alltoall_sellwoodbridge <- breakaleg(network,O, D,c("465285319","923041198","595610339","486837832"))
oshutoall <- breakaleg(network,O[O$GEOID=="410510058002",], D,NULL)
oshutoall_marguambridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,c("5528057","595610338"))
oshutoall_rossislandbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,c("189307193","542826787","682179096","587574521","123374695","174985371"))
oshutoall_sellwoodbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,leg=c("465285319","923041198","595610339","486837832"))
network[network$way_id %in%c("465285319","923041198","595610339","486837832"),] %>% nrow()
if (!require(pacman)) {install.packages("pacman"); library(pacman)}
p_load(tidyverse,mapview, dodgr)
##################################################################
# Import simplified full network.
net3cc.main <- readRDS("~/urbanstudy/NITC-Resilience/content/osm/net3ccmain.Rds")
# summary(net3cc.main$d)
# plot(density(net3cc.main$d))
# Import Census Block Groups.
pdx_bg <- readRDS(file = "~/urbanstudy/NITC-Resilience/content/acs/pdx_bg.RDS")
## Select GROID and centroid points
pdx_df <- pdx_bg %>% as.data.frame() %>% select(GEOID,INTPTLAT,INTPTLON,-geometry) %>% # as_tibble()
mutate(lat=as.numeric(INTPTLAT),lon=as.numeric(INTPTLON)) %>%
select(GEOID,lat,lon)
## Read the road network with geometry infor
pdx3cnet.main <- readRDS("~/urbanstudy/NITC-Resilience/content/osm/pdx3cnet.main.Rds")
## Join Block Group with long OD table
pdx_bg %>% left_join(od.table %>% filter(orig=="410510073001"),by = c("GEOID"="dest")) %>%
mapview(z="dist") #+ mapview(pdx3cnet.main) # PDX airport, 34.7km to Hillsboro airport (41.8km in GoogleMap)
##################################################################
# Calculate full network distance
## Calculate OD matrix
odd.matrix <- dodgr_dists (net3cc.main, from = od.all, to = od.all) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
colnames(odd.matrix) <- row.names(odd.matrix) <- pdx_df$GEOID
mean(odd.matrix[upper.tri(odd.matrix)])
## Convert to long table
od.table <-odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
head(od.table)
## All centroid points as OD
od.all <- pdx_df  %>% select(-GEOID)
##################################################################
# Calculate full network distance
## Calculate OD matrix
odd.matrix <- dodgr_dists (net3cc.main, from = od.all, to = od.all) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
colnames(odd.matrix) <- row.names(odd.matrix) <- pdx_df$GEOID
mean(odd.matrix[upper.tri(odd.matrix)])
## Convert to long table
od.table <-odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
mapview(pdx3cnet.main)
# osm_id: 5528057, 595610338 # Marquam Bridge
# osm_id: "189307193","542826787","682179096","587574521","123374695","174985371" Rose Island Bridge
# osm_id: "465285319","923041198","595610339","486837832" Sellwood Bridge
network <- net3cc.main
O <- D <- pdx_df
# ohsu <- O[O$GEOID=="410510058002",]
breakaleg <- function(network, O, D, leg){
o <- O %>% select(-GEOID)
d <- D %>% select(-GEOID)
net.break <- network[!(network$way_id %in%leg),]
odd.matrix <- dodgr_dists (net.break, from = o, to = d) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
colnames(odd.matrix) <- D$GEOID
row.names(odd.matrix) <- O$GEOID
## Convert to long table
od.table <- odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
return(mean(od.table$dist))
}
alltoall <- breakaleg(network,O, D,NULL)
alltoall_marguambridge <- breakaleg(network,O, D,c("5528057","595610338"))
alltoall_rossislandbridge <- breakaleg(network,O, D,c("189307193","542826787","682179096","587574521","123374695","174985371"))
alltoall_sellwoodbridge <- breakaleg(network,O, D,c("465285319","923041198","595610339","486837832"))
oshutoall <- breakaleg(network,O[O$GEOID=="410510058002",], D,NULL)
oshutoall_marguambridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,c("5528057","595610338"))
oshutoall_rossislandbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,c("189307193","542826787","682179096","587574521","123374695","174985371"))
oshutoall_sellwoodbridge <- breakaleg(network,O[O$GEOID=="410510058002",], D,leg=c("465285319","923041198","595610339","486837832"))
network[network$way_id %in%c("189307193","542826787","682179096","587574521","123374695","174985371"),] %>% nrow()
network[network$way_id %in%c("465285319","923041198","595610339","486837832"),] %>% nrow()
## Join Block Group with long OD table
pdx_bg %>% left_join(od.table %>% filter(orig=="410510073001"),by = c("GEOID"="dest")) %>%
mapview(z="dist") #+ mapview(pdx3cnet.main) # PDX airport, 34.7km to Hillsboro airport (41.8km in GoogleMap)
## Read the road network with geometry infor
pdx3cnet.main <- readRDS("~/urbanstudy/NITC-Resilience/content/osm/pdx3cnet.main.Rds")
# summary(net3cc.main$d)
# plot(density(net3cc.main$d))
# Import Census Block Groups.
pdx_bg <- readRDS(file = "~/urbanstudy/NITC-Resilience/content/acs/pdx_bg.RDS")
## Select GROID and centroid points
pdx_df <- pdx_bg %>% as.data.frame() %>% select(GEOID,INTPTLAT,INTPTLON,-geometry) %>% # as_tibble()
mutate(lat=as.numeric(INTPTLAT),lon=as.numeric(INTPTLON)) %>%
select(GEOID,lat,lon)
# ohsu <- O[O$GEOID=="410510058002",]
breakaleg <- function(network, O, D, leg){
net <- dodgr::weight_streetnet (network, wt_profile ="motorcar",id_col = "osm_id") #
net <- net[net$component == 1, ]
net <- dodgr::dodgr_contract_graph (net)
o <- O %>% select(-GEOID)
d <- D %>% select(-GEOID)
net.break <- net[!(net$way_id %in%leg),]
odd.matrix <- dodgr::dodgr_dists (net.break, from = o, to = d) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
colnames(odd.matrix) <- D$GEOID
row.names(odd.matrix) <- O$GEOID
## Convert to long table
od.table <- odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
return(mean(od.table$dist))
}
alltoall <- breakaleg(pdx3cnet.main,pdx_df, pdx_df,NULL)
leg.marguambridge <- c("5528057","595610338") # Marquam Bridge
leg.rossislandbridge <- c("189307193","542826787","682179096","587574521","123374695","174985371") # Rose Island Bridge
leg.sellwoodbridge <- c("465285319","923041198","595610339","486837832") # Sellwood Bridge
ohsu <- pdx_df[pdx_df$GEOID=="410510058002",]
alltoall_marguambridge <- breakaleg(pdx3cnet.main, pdx_df, pdx_df, leg.marguambridge)
alltoall_rossislandbridge <- breakaleg(pdx3cnet.main, pdx_df, pdx_df, leg.rossislandbridge)
alltoall_sellwoodbridge <- breakaleg(pdx3cnet.main, pdx_df, pdx_df, leg.sellwoodbridge)
breakaleg <- function(network, O, D, leg){
net.break <- network[!(network$osm_id %in%leg),]
net <- dodgr::weight_streetnet (net.break, wt_profile ="motorcar",id_col = "osm_id") #
net <- net[net$component == 1, ]
net <- dodgr::dodgr_contract_graph (net)
o <- O %>% select(-GEOID)
d <- D %>% select(-GEOID)
odd.matrix <- dodgr::dodgr_dists (net, from = o, to = d) #, heap = "Heap23"
# Binary Heap (BHeap),Fibonacci Heap "FHeap", Trinomial Heap (TriHeap), Extended Trinomial Heap (TriHeapExt, and 2-3 Heap (Heap23').
colnames(odd.matrix) <- D$GEOID
row.names(odd.matrix) <- O$GEOID
## Convert to long table
od.table <- odd.matrix %>% as_tibble(rownames= "orig") %>%  # rownames= NA include but hide
pivot_longer(!orig, names_to = "dest", values_to = "dist") %>% arrange(orig,dest)
return(mean(od.table$dist))
}
oshutoall <- breakaleg(pdx3cnet.main,ohsu, pdx_df,NULL)
oshutoall_marguambridge <- breakaleg(pdx3cnet.main,ohsu, pdx_df, leg.marguambridge)
oshutoall_rossislandbridge <- breakaleg(pdx3cnet.main,ohsu, pdx_df, leg.rossislandbridge)
oshutoall_sellwoodbridge <- breakaleg(pdx3cnet.main,ohsu, pdx_df, leg.sellwoodbridge)
pdx3cnet.main[pdx3cnet.main$osm_id %in% leg.marguambridge,] %>% nrow()
pdx3cnet.main[pdx3cnet.main$osm_id %in% leg.rossislandbridge,] %>% nrow()
pdx3cnet.main[pdx3cnet.main$osm_id %in% leg.sellwoodbridge,] %>% nrow()
pdx3cnet.main[!(pdx3cnet.main$osm_id %in% leg.marguambridge),] %>% mapview()
leg.rossislandbridge <- c("189307193","542826787","682179096","587574521","123374695","174985371") # Rose Island Bridge
pdx3cnet.main[!(pdx3cnet.main$osm_id %in% leg.rossislandbridge),] %>% mapview()
leg.sellwoodbridge <- c("465285319","923041198","595610339","486837832") # Sellwood Bridge
pdx3cnet.main[!(pdx3cnet.main$osm_id %in% leg.sellwoodbridge),] %>% mapview()
alltoall_marguambridge <- breakaleg(pdx3cnet.main, pdx_df, pdx_df, leg.marguambridge)
alltoall_rossislandbridge <- breakaleg(pdx3cnet.main, pdx_df, pdx_df, leg.rossislandbridge)
alltoall_sellwoodbridge <- breakaleg(pdx3cnet.main, pdx_df, pdx_df, leg.sellwoodbridge)
